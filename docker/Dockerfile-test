FROM nvidia/cuda:9.2-devel-centos7

# Update all packages and install the development toolset (newer version of GNU gcc and tools)
RUN yum -y update \
    && yum install -y centos-release-scl \
    && yum install -y devtoolset-7 \
    && yum group install -y "Development Tools" \
    && yum install -y blas-devel lapack-devel wget zlib-devel python-devel python3 \
    && echo 'source scl_source enable devtoolset-7' >> ~/.bashrc \
    && source scl_source enable devtoolset-7 \
    && yum clean all

# Add EPEL repository
#RUN wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
#    && rpm -ivh epel-release-latest-7.noarch.rpm \
#    && rm epel-release-latest-7.noarch.rpm

#RUN yum -y update \
#    && yum install -y --enablerepo=epel netcdf-mpich-devel netcdf-devel \
#    && yum clean all

# Install MPI
RUN cd /tmp \
    && source scl_source enable devtoolset-7 \
    && echo $(which gfortran) \
    && gfortran --version \
    && wget -q http://www.mpich.org/static/downloads/3.1.4/mpich-3.1.4.tar.gz \
    && tar xf mpich-3.1.4.tar.gz \
    && cd mpich-3.1.4 \
    && ./configure --enable-g=debug --enable-fast=O0 --prefix=/usr \
    && make -j3 \
    && make install \
    && ldconfig 
    #\
    #&& cd .. \
    #&& rm -rf mpich-3.1.4 \
    #&& rm -f mpich-3.1.4.tar.gz

# Install HDF5
#COPY ./docker/hdf5-1.10.6.patch /tmp/
#RUN cd /tmp \
#    && source scl_source enable devtoolset-7 \
#    && wget -q https://hdf-wordpress-1.s3.amazonaws.com/wp-content/uploads/manual/HDF5/HDF5_1_10_6/source/hdf5-1.10.6.tar.gz \
#    && tar xf hdf5-1.10.6.tar.gz \
#    && patch -p0 < hdf5-1.10.6.patch \
RUN cd /tmp \
    && source scl_source enable devtoolset-7 \
    && wget -q https://hdf-wordpress-1.s3.amazonaws.com/wp-content/uploads/manual/HDF5/HDF5_1_10_6/source/hdf5-1.10.6.tar.gz \
    && tar xf hdf5-1.10.6.tar.gz \
    && cd hdf5-1.10.6 \
    && FC=mpifort CC=mpicc ./configure --enable-build-mode=debug --enable-symbols=yes --enable-profiling=yes --enable-parallel --enable-fortran --prefix=/usr \
    && make -j3 \
    && make install \
    && ldconfig 
    #\
    #&& cd .. \
    #&& rm -rf hdf5-1.10.6 \
    #&& rm -f hdf5-1.10.6.tar.gz

# Install CMake
RUN cd /tmp \
    && source scl_source enable devtoolset-7 \
    && wget https://cmake.org/files/v3.12/cmake-3.12.3.tar.gz \
    && tar -xf cmake-3.12.3.tar.gz \
    && cd cmake-3.12.3 \
    && ./configure --prefix=/usr \
    && make -j3 \
    && make install 
    #\
    #&& cd /tmp \
    #&& rm -Rf cmake-3.12.3*

# Copy hpc-predict source code in
#VOLUME ["/src/hpc-predict"]
COPY . /src/hpc-predict/hpc-predict-io


# Compile the Fortran part of hpc-predict-io (without IMPACT tests) and setup python venv
RUN cd /src/hpc-predict/hpc-predict-io \
    && mkdir build install \
    && cd build \
    && source scl_source enable devtoolset-7 \
    && cmake -DCMAKE_Fortran_COMPILER=mpifort \
      -DCMAKE_C_COMPILER=mpicc \
      -DCMAKE_CXX_COMPILER=mpicxx \
      -DHDF5_ROOT=/usr/ \
      -DCMAKE_INSTALL_PREFIX=../install \
      ../ \
    && make VERBOSE=1 install \
    && cd /src/hpc-predict/hpc-predict-io/python \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && pip install --upgrade pip \
    && pip install -r requirements.txt
