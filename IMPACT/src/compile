#*************************************************************************************************************
#* IMPACT                                                                                                    *
#* by Rolf Henniger, Institute of Fluid Dynamics, ETH Zurich (henniger@ifd.mavt.ethz.ch)                     *
#* Mai 2005 - Dec 2011                                                                                       *
#* modified by Barna Becsek, ARTORG Center, University of Bern (barna.becsek@artorg.unibe.ch                 *
#* October 2015                                                                                              *
#*************************************************************************************************************

#####################################################################
#####################################################################
###                                                               ###
###    please do not edit this file, use the Makefile instead!    ###
###                                                               ###
#####################################################################
#####################################################################


#--- compilation flags ---
FLAG1 = $(OPT1) $(INCL) $(PRE) -J$(DST)
FLAG2 = $(OPT2) $(INCL) $(PRE) -J$(DST)
ifdef IMPACT_TESTING
   FLAG1 += $(FFLAGS)
   FLAG2 += $(FFLAGS)
endif

#--- dependencies of the mod-files and usr-files ---
#
#	M1  mod_dims:       --
#	M2  mod_vars:       mod_dims
#       M3  mod_exchange:   mod_dims, mod_vars
#       M4  mod_diff:       mod_dims, mod_vars, mod_exchange
#       M5  mod_coeffs:     mod_dims, mod_vars, mod_exchange, mod_diff
#       M6  mod_laplace:    mod_dims, mod_vars, mod_exchange, mod_diff
#       M7  mod_helmholtz:  mod_dims, mod_vars, mod_exchange, mod_diff
#       M8  mod_lib:        mod_dims, mod_vars, mod_exchange, mod_diff     , mod_coeffs
#	M9  mod_setup:      mod_dims, mod_vars
#       M10 mod_inout:      mod_dims, mod_vars, mod_exchange, mod_lib
#       M11 mod_test:       mod_dims, mod_vars, mod_exchange               , mod_helmholtz, mod_laplace
#       M12 mod_les:        mod_dims, mod_vars, mod_diff
#       M13 mod_solvers:    mod_dims, mod_vars, mod_exchange, mod_diff     , mod_helmholtz, mod_laplace, mod_inout
#       M14 mod_particles   mod_dims, mod_vars, mod_exchange
#       M15 mod_geometry:   mod_dims, mod_vars
#       M16 mod_rhs:        mod_dims, mod_vars, mod_diff
#       M17 mod_timeint:    mod_dims, mod_vars, mod_exchange, mod_diff     , mod_inout    , mod_coeffs , mod_lib  , mod_rhs, mod_solvers, mod_ibm
#       M14 mod_ibm:        mod_dims, mod_vars,                                                          mod_lib 
#
#	U1  usr_vars:       mod_*
#	U2  usr_func:       mod_*, usr_vars
#	U3  usr_config:     mod_*, usr_vars, usr_func
#       U4  usr_geometry:   mod_*, usr_vars, usr_func
#       U5  usr_force:      mod_*, usr_vars, usr_func
#       U6  usr_boundcond:  mod_*, usr_vars, usr_func
#       U7  usr_initcond:   mod_*, usr_vars, usr_func
#       U8  usr_stats:      mod_*, usr_vars, usr_func
#       U9  usr_post:       mod_*, usr_vars, usr_func, usr_stats



#--- name of the executable ---
NAME = impact
EXE  = $(NAME).exe

#--- objects and subunits ---
OBJ   = $(NAME).o

MOD1  = mod_dims
MOD2  = mod_vars
MOD3  = mod_exchange
MOD4  = mod_diff
MOD5  = mod_coeffs
MOD6  = mod_laplace
MOD7  = mod_helmholtz
MOD8  = mod_lib
MOD9  = mod_setup
MOD10 = mod_inout
MOD11 = mod_test
MOD13 = mod_solvers
MOD15 = mod_geometry
MOD16 = mod_rhs
MOD17 = mod_timeint
SUB1  = sub_other

MOD   = $(DST)/$(MOD1).o  $(DST)/$(MOD2).o  $(DST)/$(MOD3).o  $(DST)/$(MOD4).o  $(DST)/$(MOD5).o  $(DST)/$(MOD6).o  \
        $(DST)/$(MOD7).o  $(DST)/$(MOD8).o  $(DST)/$(MOD9).o  $(DST)/$(MOD10).o $(DST)/$(MOD11).o  \
        $(DST)/$(MOD13).o  $(DST)/$(MOD15).o $(DST)/$(MOD16).o $(DST)/$(MOD17).o $(DST)/$(SUB1).o

USR1  = usr_vars
USR2  = usr_func
USR3  = usr_config
USR4  = usr_geometry
USR5  = usr_force
USR6  = usr_boundcond
USR7  = usr_initcond
USR8  = usr_stats
USR9  = usr_post

USR   = $(DST)/$(USR1).o  $(DST)/$(USR2).o  $(DST)/$(USR3).o  $(DST)/$(USR4).o  $(DST)/$(USR5).o  $(DST)/$(USR6).o  \
        $(DST)/$(USR7).o  $(DST)/$(USR8).o  $(DST)/$(USR9).o


##############################################################################################################
### compilation ##############################################################################################
##############################################################################################################


ifeq ($(CUSR),FALSE)


#--- dependencies and compilation of the EXECUTABLE ---

build:  $(DST)/$(OBJ) $(MOD) $(USR)
	$(COMP) -o $(DST)/$(EXE) $(FLAG1) $(MOD) $(USR) $(DST)/$(OBJ) $(LIBS)
	ar rcs $(DST)/lib$(NAME).a $(MOD) $(USR)

#--- dependencies and compilation of the OBJECT ---

$(DST)/$(OBJ): $(MOD) $(USR) $(NAME).f90
	$(COMP) -o $(DST)/$(NAME).o $(FLAG2) -c $(NAME).f90


#--- dependencies and compilation of the MODULES ---

$(DST)/$(MOD1).o:  $(MOD1).f90
	$(COMP) -o $(DST)/$(MOD1).o $(FLAG2) -c $(MOD1).f90

$(DST)/$(MOD2).o:  $(DST)/$(MOD1).o $(MOD2).f90
	$(COMP) -o $(DST)/$(MOD2).o $(FLAG2) -c $(MOD2).f90

$(DST)/$(MOD3).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(MOD3).f90
	$(COMP) -o $(DST)/$(MOD3).o $(FLAG2) -c $(MOD3).f90

$(DST)/$(MOD4).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(MOD4).f90
	$(COMP) -o $(DST)/$(MOD4).o $(FLAG2) -c $(MOD4).f90

$(DST)/$(MOD5).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(MOD5).f90
	$(COMP) -o $(DST)/$(MOD5).o $(FLAG2) -c $(MOD5).f90

$(DST)/$(MOD6).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD4).o $(MOD6).f90
	$(COMP) -o $(DST)/$(MOD6).o $(FLAG2) -c $(MOD6).f90

$(DST)/$(MOD7).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD4).o $(MOD7).f90
	$(COMP) -o $(DST)/$(MOD7).o $(FLAG2) -c $(MOD7).f90

$(DST)/$(MOD8).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD4).o $(DST)/$(MOD5).o $(MOD8).f90
	$(COMP) -o $(DST)/$(MOD8).o $(FLAG2) -c $(MOD8).f90

$(DST)/$(MOD9).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD8).o $(MOD9).f90
	$(COMP) -o $(DST)/$(MOD9).o $(FLAG2) -c $(MOD9).f90

$(DST)/$(MOD10).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD8).o $(MOD10).f90
	$(COMP) -o $(DST)/$(MOD10).o $(FLAG2) -c $(MOD10).f90

$(DST)/$(MOD11).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD4).o $(DST)/$(MOD6).o $(DST)/$(MOD7).o $(MOD11).f90
	$(COMP) -o $(DST)/$(MOD11).o $(FLAG2) -c $(MOD11).f90

$(DST)/$(MOD13).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD4).o $(DST)/$(MOD6).o $(DST)/$(MOD7).o $(DST)/$(MOD10).o $(MOD13).f90
	$(COMP) -o $(DST)/$(MOD13).o $(FLAG2) -c $(MOD13).f90

$(DST)/$(MOD15).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(MOD15).f90
	$(COMP) -o $(DST)/$(MOD15).o $(FLAG2) -c $(MOD15).f90

$(DST)/$(MOD16).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD4).o $(MOD16).f90
	$(COMP) -o $(DST)/$(MOD16).o $(FLAG2) -c $(MOD16).f90

$(DST)/$(MOD17).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD4).o $(DST)/$(MOD5).o $(DST)/$(MOD8).o $(DST)/$(MOD10).o $(DST)/$(MOD11).o $(DST)/$(MOD13).o $(DST)/$(MOD16).o $(MOD17).f90
	$(COMP) -o $(DST)/$(MOD17).o $(FLAG2) -c $(MOD17).f90

$(DST)/$(SUB1).o: $(SUB1).f90
	$(COMP) -o $(DST)/$(SUB1).o $(FLAG2) -c $(SUB1).f90



$(DST)/$(USR1).o: $(MOD) $(USR1).f90
	$(COMP) -o $(DST)/$(USR1).o $(FLAG2) -c $(USR1).f90

$(DST)/$(USR2).o: $(MOD) $(DST)/$(USR1).o $(USR2).f90
	$(COMP) -o $(DST)/$(USR2).o $(FLAG2) -c $(USR2).f90

$(DST)/$(USR3).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR3).f90
	$(COMP) -o $(DST)/$(USR3).o $(FLAG2) -c $(USR3).f90

$(DST)/$(USR4).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR4).f90
	$(COMP) -o $(DST)/$(USR4).o $(FLAG2) -c $(USR4).f90

$(DST)/$(USR5).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR5).f90
	$(COMP) -o $(DST)/$(USR5).o $(FLAG2) -c $(USR5).f90

$(DST)/$(USR6).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR6).f90
	$(COMP) -o $(DST)/$(USR6).o $(FLAG2) -c $(USR6).f90

$(DST)/$(USR7).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR7).f90
	$(COMP) -o $(DST)/$(USR7).o $(FLAG2) -c $(USR7).f90

$(DST)/$(USR8).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR8).f90
	$(COMP) -o $(DST)/$(USR8).o $(FLAG2) -c $(USR8).f90

$(DST)/$(USR9).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(DST)/$(USR8).o $(USR9).f90
	$(COMP) -o $(DST)/$(USR9).o $(FLAG2) -c $(USR9).f90


##############################################################################################################


else


#--- dependencies and compilation of the EXECUTABLE ---

build:  $(DST)/$(OBJ) $(USR)
	$(COMP) -o $(DST)/$(EXE) $(FLAG1) $(MOD) $(USR) $(DST)/$(OBJ) $(LIBS)


#--- dependencies and compilation of the OBJECT ---

$(DST)/$(OBJ): $(USR) $(NAME).f90
	$(COMP) -o $(DST)/$(NAME).o $(FLAG2) -c $(NAME).f90


#--- dependencies and compilation of the MODULES ---

$(DST)/$(USR1).o: $(USR1).f90
	$(COMP) -o $(DST)/$(USR1).o $(FLAG2) -c $(USR1).f90

$(DST)/$(USR2).o: $(DST)/$(USR1).o $(USR2).f90
	$(COMP) -o $(DST)/$(USR2).o $(FLAG2) -c $(USR2).f90

$(DST)/$(USR3).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR3).f90
	$(COMP) -o $(DST)/$(USR3).o $(FLAG2) -c $(USR3).f90

$(DST)/$(USR4).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR4).f90
	$(COMP) -o $(DST)/$(USR4).o $(FLAG2) -c $(USR4).f90

$(DST)/$(USR5).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR5).f90
	$(COMP) -o $(DST)/$(USR5).o $(FLAG2) -c $(USR5).f90

$(DST)/$(USR6).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR6).f90
	$(COMP) -o $(DST)/$(USR6).o $(FLAG2) -c $(USR6).f90

$(DST)/$(USR7).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR7).f90
	$(COMP) -o $(DST)/$(USR7).o $(FLAG2) -c $(USR7).f90

$(DST)/$(USR8).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR8).f90
	$(COMP) -o $(DST)/$(USR8).o $(FLAG2) -c $(USR8).f90

$(DST)/$(USR9).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(DST)/$(USR8).o $(USR9).f90
	$(COMP) -o $(DST)/$(USR9).o $(FLAG2) -c $(USR9).f90


endif

##############################################################################################################


#--- Unit Testing ---
SUT: $(MOD) $(USR)

exebuild: FFLAGS += $(LIBS) $(FLAG1)
exebuild: SUT
	$(FC) -o ../$(EXE_TEST) -I$(PFUNIT)/mod -I$(PFUNIT)/include -I$(TEST_DIR) -I$(DST_DIR) $(PFUNIT)/include/driver.F90 $(TEST_DIR)/*$(OBJ_EXT) $(DST_DIR)/*$(OBJ_EXT) -L$(PFUNIT)/lib -lpfunit -DUSE_MPI $(FFLAGS) $(FPPFLAGS)

#--- f2py ---
DIRPRE = f2py/preproc
DIRSIG = f2py/signature
DIREXT = f2py/ext_mod
DIRBLD = f2py/build
EXCL   = $(DIRPRE)/$(MOD4).f90 $(DIRPRE)/$(MOD5).f90 $(DIRPRE)/$(MOD6).f90 $(DIRPRE)/$(MOD7).f90 $(DIRPRE)/$(MOD8).f90 \
	 $(DIRPRE)/$(MOD9).f90 $(DIRPRE)/$(MOD10).f90 $(DIRPRE)/$(MOD11).f90 $(DIRPRE)/$(MOD12).f90 $(DIRPRE)/$(MOD13).f90 \
	 $(DIRPRE)/$(MOD14).f90 $(DIRPRE)/$(MOD15).f90 $(DIRPRE)/$(MOD16).f90 $(DIRPRE)/$(MOD17).f90 $(DIRPRE)/$(USR1).f90 \
	 $(DIRPRE)/$(USR2).f90 $(DIRPRE)/$(USR3).f90 $(DIRPRE)/$(USR4).f90 $(DIRPRE)/$(USR5).f90 $(DIRPRE)/$(USR6).f90 \
	 $(DIRPRE)/$(USR7).f90 $(DIRPRE)/$(USR8).f90 $(DIRPRE)/$(USR9).f90
INTERF = $(DIRPRE)/$(MOD1).f90 $(DIRPRE)/$(MOD2).f90 $(DIRPRE)/$(MOD3).f90 $(DIRPRE)/$(MOD4).f90 $(DIRPRE)/$(MOD5).f90 $(DIRPRE)/$(MOD8).f90 \
	 $(DIRPRE)/$(MOD9).f90 $(DIRPRE)/$(MOD10).f90 $(DIRPRE)/$(MOD11).f90 $(DIRPRE)/$(MOD13).f90 $(DIRPRE)/$(MOD14).f90 \
	 $(DIRPRE)/$(MOD15).f90 $(DIRPRE)/$(MOD16).f90 $(DIRPRE)/$(MOD17).f90 $(DIRPRE)/$(USR1).f90 \
	 $(DIRPRE)/$(USR2).f90 $(DIRPRE)/$(USR3).f90 $(DIRPRE)/$(USR7).f90 $(DIRPRE)/$(USR8).f90 $(DIRPRE)/$(USR9).f90
FSRC = $(filter-out $(DIRPRE)/alloc.f90, $(wildcard $(DIRPRE)/*.f90))
preprocess:
	$(COMP) -o $(DIRPRE)/$(MOD1).f90 -E $(PRE) $(SRC)/$(MOD1).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD2).f90 -E $(PRE) $(SRC)/$(MOD2).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD3).f90 -E $(PRE) $(SRC)/$(MOD3).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD4).f90 -E $(PRE) $(SRC)/$(MOD4).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD5).f90 -E $(PRE) $(SRC)/$(MOD5).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD6).f90 -E $(PRE) $(SRC)/$(MOD6).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD7).f90 -E $(PRE) $(SRC)/$(MOD7).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD8).f90 -E $(PRE) $(SRC)/$(MOD8).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD9).f90 -E $(PRE) $(SRC)/$(MOD9).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD10).f90 -E $(PRE) $(SRC)/$(MOD10).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD11).f90 -E $(PRE) $(SRC)/$(MOD11).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD13).f90 -E $(PRE) $(SRC)/$(MOD13).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD14).f90 -E $(PRE) $(SRC)/$(MOD14).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD15).f90 -E $(PRE) $(SRC)/$(MOD15).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD16).f90 -E $(PRE) $(SRC)/$(MOD16).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(MOD17).f90 -E $(PRE) $(SRC)/$(MOD17).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(SUB1).f90 -E $(PRE) $(SRC)/$(SUB1).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(USR1).f90 -E $(PRE) $(SRC)/$(USR1).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(USR2).f90 -E $(PRE) $(SRC)/$(USR2).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(USR3).f90 -E $(PRE) $(SRC)/$(USR3).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(USR4).f90 -E $(PRE) $(SRC)/$(USR4).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(USR5).f90 -E $(PRE) $(SRC)/$(USR5).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(USR6).f90 -E $(PRE) $(SRC)/$(USR6).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(USR7).f90 -E $(PRE) $(SRC)/$(USR7).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(USR8).f90 -E $(PRE) $(SRC)/$(USR8).f90 -cpp
	$(COMP) -o $(DIRPRE)/$(USR9).f90 -E $(PRE) $(SRC)/$(USR9).f90 -cpp
	$(COMP) -o $(DIRPRE)/alloc.f90   -E $(PRE) $(SRC)/alloc.f90   -cpp

signature: preprocess
	f2py -m $(NAME) -h $(DIRSIG)/$(NAME).pyf $(FSRC) skip: compute_distances_to_vicinity_coordinates exchange_1d gradient_transp_1d divergence_transp_1d bc_extrapolation_transp_1d product_div_grad_transp_1d bicgstab2_1d setup_mass_matrix2 read_hdf_ib : # $(INTERF) only: init_alarm configuration test_parameter init_general init_parallel init_boundaries init_limits coordinates init_ib fd_coeffs get_stencil get_stencil_helm interp_coeffs interp_coeffs_helm restr_coeffs restr_coeffs_helm test_coeffs get_weights get_beta timeintegration postprocess analyze_matrix init_hdf5 init_mpi finl_hdf5 finl_mpi print_fcomm_size pass_mpi_comm initial_conditions_vel explicit twostep outer_iteration test_divergence compute_stats get_dtime get_nullspace read_restart write_fields write_restart write_restart_stats read_restart_stats get_stencil_transp get_stencil init_bc open_stats interpolate_vel_to_ib update_boundary calculate_displacements fe_setup_triangular_3node compute_force rhs_vel  check_signal level_pressure iteration_stats close_stats fill_corners exchange_all_all interpolate_vel mpi_bcast_fort : # routines starting from initial_conditions_vel are only needed if timeintegration is written in python
	sed -i s~size\(ncb1c\)~4~g $(DIRSIG)/impact.pyf
	sed -i s~size\(ncb1d\)~4~g $(DIRSIG)/impact.pyf
	sed -i s~size\(ncb1g\)~4~g $(DIRSIG)/impact.pyf
	sed -i s~size\(ncb2c\)~4~g $(DIRSIG)/impact.pyf
	sed -i s~size\(ncb2d\)~4~g $(DIRSIG)/impact.pyf
	sed -i s~size\(ncb2g\)~4~g $(DIRSIG)/impact.pyf
	sed -i s~size\(ncb3c\)~4~g $(DIRSIG)/impact.pyf
	sed -i s~size\(ncb3d\)~4~g $(DIRSIG)/impact.pyf
	sed -i s~size\(ncb3g\)~4~g $(DIRSIG)/impact.pyf
	sed -i s~ncb1c\(dim_ncb1c\)~7~g $(DIRSIG)/impact.pyf
	sed -i s~ncb1d\(dim_ncb1d\)~6~g $(DIRSIG)/impact.pyf
	sed -i s~ncb1g\(dim_ncb1g\)~6~g $(DIRSIG)/impact.pyf
	sed -i s~ncb2c\(dim_ncb2c\)~7~g $(DIRSIG)/impact.pyf
	sed -i s~ncb2d\(dim_ncb2d\)~6~g $(DIRSIG)/impact.pyf
	sed -i s~ncb2g\(dim_ncb2g\)~6~g $(DIRSIG)/impact.pyf
	sed -i s~ncb3c\(dim_ncb3c\)~7~g $(DIRSIG)/impact.pyf
	sed -i s~ncb3d\(dim_ncb3d\)~6~g $(DIRSIG)/impact.pyf
	sed -i s~ncb3g\(dim_ncb3g\)~6~g $(DIRSIG)/impact.pyf
	# needed for timeloop
	sed -i s~fill_corners\(phi\)~fill_corners\(phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine fill_corners/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~exchange_all_all\(vel_yes,phi\)~exchange_all_all\(vel_yes,phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine exchange_all_all/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	# needed for full wrapping (need n1,n2,n3 and biu,bil i=1,2,3 as addt'l inputs)
	sed -i s~divergence\(m,phi,div\)~divergence\(m,phi,div,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine divergence/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~divergence2\(phi,div\)~divergence2\(phi,div,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine divergence2/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~divergence_transp\(m,phi,div\)~divergence_transp\(m,phi,div,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine divergence_transp/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~gradient\(m,phi,grad\)~gradient\(m,phi,grad,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine gradient/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~gradient_transp\(m,phi,grad\)~gradient_transp\(m,phi,grad,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine gradient_transp/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~helmholtz\(m,exch_yes,phi,lap\)~helmholtz\(m,exch_yes,phi,lap,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine helmholtz/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~helmholtz_pre_explicit\(exch_yes,phi,lap\)~helmholtz_pre_explicit\(exch_yes,phi,lap,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine helmholtz_pre_explicit/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~interpolate_vel_pre\(exch_yes,m,ss1,ss2,ss3,nn1,nn2,nn3,phi,inter\)~interpolate_vel_pre\(exch_yes,m,ss1,ss2,ss3,nn1,nn2,nn3,phi,inter,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine interpolate_vel_pre/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~interpolate2_vel_pre\(exch_yes,m,phi,inter\)~interpolate2_vel_pre\(exch_yes,m,phi,inter,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine interpolate2_vel_pre/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~interpolate_pre_vel\(exch_yes,m,ss1,ss2,ss3,nn1,nn2,nn3,phi,inter\)~interpolate_pre_vel\(exch_yes,m,ss1,ss2,ss3,nn1,nn2,nn3,phi,inter,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine interpolate_pre_vel/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~interpolate2_pre_vel\(exch_yes,m,phi,inter\)~interpolate2_pre_vel\(exch_yes,m,phi,inter,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine interpolate2_pre_vel/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~first_adv_pre\(exch_yes,m,ss1,ss2,ss3,nn1,nn2,nn3,phi,der,adv,upwind_yes\)~first_adv_pre\(exch_yes,m,ss1,ss2,ss3,nn1,nn2,nn3,phi,der,adv,upwind_yes,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine first_adv_pre/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~first_adv_vel\(exch_yes,m,ss1,ss2,ss3,nn1,nn2,nn3,phi,der,adv,upwind_yes\)~first_adv_vel\(exch_yes,m,ss1,ss2,ss3,nn1,nn2,nn3,phi,der,adv,upwind_yes,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine first_adv_vel/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~bc_extrapolation\(m,phi\)~bc_extrapolation\(m,phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine bc_extrapolation/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~bc_extrapolation_transp\(m,phi\)~bc_extrapolation_transp\(m,phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine bc_extrapolation_transp/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~exchange\(dir,vel_dir,phi\)~exchange\(dir,vel_dir,phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine exchange/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~exchange2\(dir,vel_dir,ss1,ss2,ss3,nn1,nn2,nn3,phi\)~exchange2\(dir,vel_dir,ss1,ss2,ss3,nn1,nn2,nn3,phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine exchange2/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~exchange_part\(dir,vel_dir,ss,phi\)~exchange_part\(dir,vel_dir,ss,phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine exchange_part/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~product_helmholtz\(phi,hel\)~product_helmholtz\(phi,hel,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine product_helmholtz/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~product_helmholtz_relax\(phi,hel\)~product_helmholtz_relax\(phi,hel,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine product_helmholtz_relax/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~relaxation_helmholtz\(init_yes,n_relax,bb,rel\)~relaxation_helmholtz\(init_yes,n_relax,bb,rel,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine relaxation_helmholtz/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~richardson\(eps,n_it_max,init_yes,ss1,ss2,ss3,nn1,nn2,nn3,bb,phi,problem_type,quiet_yes1,quiet_yes2,preconditioner\)~richardson\(eps,n_it_max,init_yes,ss1,ss2,ss3,nn1,nn2,nn3,bb,phi,problem_type,quiet_yes1,quiet_yes2,preconditioner,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine richardson/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~product_scalar\(ss1,ss2,ss3,nn1,nn2,nn3,phi1,phi2,scalar\)~product_scalar\(ss1,ss2,ss3,nn1,nn2,nn3,phi1,phi2,scalar,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine product_scalar/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~multadd1\(ss1,ss2,ss3,nn1,nn2,nn3,mult,vec,phi\)~multadd1\(ss1,ss2,ss3,nn1,nn2,nn3,mult,vec,phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf 
	sed -i '/end subroutine multadd1/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~multadd2\(ss1,ss2,ss3,nn1,nn2,nn3,mult1,mult2,vec,phi1,phi2,init_yes\)~multadd2\(ss1,ss2,ss3,nn1,nn2,nn3,mult1,mult2,vec,phi1,phi2,init_yes,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf 
	sed -i '/end subroutine multadd2/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~get_norms\(ss1,ss2,ss3,nn1,nn2,nn3,phi,problem_type,inf_yes,two_yes,norminf,normtwo\)~get_norms\(ss1,ss2,ss3,nn1,nn2,nn3,phi,problem_type,inf_yes,two_yes,norminf,normtwo,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf 
	sed -i '/end subroutine get_norms/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~apply_nullspace\(res\)~apply_nullspace\(res,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine apply_nullspace/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~solve_helmholtz\(m,epsu,n_it_max,init_yes,bb,phi,quiet_yes1,quiet_yes2\)~solve_helmholtz\(m,epsu,n_it_max,init_yes,bb,phi,quiet_yes1,quiet_yes2,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine solve_helmholtz/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~write_hdf\(filename,dsetname,ss1,ss2,ss3,nn1,nn2,nn3,vel_dir,stride,phi\)~write_hdf\(filename,dsetname,ss1,ss2,ss3,nn1,nn2,nn3,vel_dir,stride,phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine write_hdf/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~write_hdf_velall\(filename,ss1,ss2,ss3,nn1,nn2,nn3,vel_dir,phi\)~write_hdf_velall\(filename,ss1,ss2,ss3,nn1,nn2,nn3,vel_dir,phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine write_hdf_velall/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~read_hdf\(filename,dsetname,ss1,ss2,ss3,nn1,nn2,nn3,vel_dir,phi\)~read_hdf\(filename,dsetname,ss1,ss2,ss3,nn1,nn2,nn3,vel_dir,phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine read_hdf/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~read2_hdf\(filename,dsetname,ss1,ss2,ss3,nn1,nn2,nn3,vel_dir,phi\)~read2_hdf\(filename,dsetname,ss1,ss2,ss3,nn1,nn2,nn3,vel_dir,phi,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine read2_hdf/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~product_div_grad\(phi,lap\)~product_div_grad\(phi,lap,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine product_div_grad/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~product_div_grad_transp\(phi,lap\)~product_div_grad_transp\(phi,lap,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine product_div_grad_transp/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i s~bicgstab\(eps,n_it_max,init_yes,ss1,ss2,ss3,nn1,nn2,nn3,bb,phi,problem_type,quiet_yes1,quiet_yes2,preconditioner\)~bicgstab\(eps,n_it_max,init_yes,ss1,ss2,ss3,nn1,nn2,nn3,bb,phi,problem_type,quiet_yes1,quiet_yes2,preconditioner,n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine bicgstab/i \		integer,intent\(in\),optional :: n1,n2,n3,b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	# These only need bil,biu i=1,2,3 as addt'l input (and nn)
	sed -i s~relaxation_helmholtz_coarse\(init_yes,n_relax,g,bb,rel\)~relaxation_helmholtz_coarse\(init_yes,n_relax,g,bb,rel,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine relaxation_helmholtz_coarse/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine relaxation_helmholtz_coarse/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~product_helmholtz_relax_coarse\(g,phi,hel\)~product_helmholtz_relax_coarse\(g,phi,hel,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine product_helmholtz_relax_coarse/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine product_helmholtz_relax_coarse/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~exchange_relax\(g,fb1,fb2,fb3,vel_dir,mirror_yes,phi\)~exchange_relax\(g,fb1,fb2,fb3,vel_dir,mirror_yes,phi,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine exchange_relax/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine exchange_relax/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~product_scalar2\(g,n1,n2,n3,ss1,ss2,ss3,nn1,nn2,nn3,phi1,phi2,scalar\)~product_scalar2\(g,n1,n2,n3,ss1,ss2,ss3,nn1,nn2,nn3,phi1,phi2,scalar,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine product_scalar2/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine product_scalar2/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~get_norms2\(g,n1,n2,n3,ss1,ss2,ss3,nn1,nn2,nn3,phi,problem_type,inf_yes,two_yes,norminf,normtwo\)~get_norms2\(g,n1,n2,n3,ss1,ss2,ss3,nn1,nn2,nn3,phi,problem_type,inf_yes,two_yes,norminf,normtwo,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine get_norms2/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine get_norms2/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~handle_corner_rhs\(g,phi\)~handle_corner_rhs\(g,phi,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine handle_corner_rhs/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine handle_corner_rhs/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~handle_corner_lap\(g,phi\)~handle_corner_lap\(g,phi,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine handle_corner_lap/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine handle_corner_lap/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~apply_nullspace2\(g,psi,res,problem_type\)~apply_nullspace2\(g,psi,res,problem_type,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine apply_nullspace2/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine apply_nullspace2/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~solve_nullspace\(eps,g,psi,problem_type\)~solve_nullspace\(eps,g,psi,problem_type,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine solve_nullspace/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine solve_nullspace/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~relax_restrict\(init_yes,nullspace_yes,g,psi,bb,phi,work,coarse,problem_type\)~relax_restrict\(init_yes,nullspace_yes,g,psi,bb,phi,work,coarse,problem_type,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine relax_restrict/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine relax_restrict/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~interpolate_relax\(g,bb,phi,work,coarse,problem_type\)~interpolate_relax\(g,bb,phi,work,coarse,problem_type,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine interpolate_relax/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine interpolate_relax/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~relax_bottom\(init_yes,nullspace_yes,g,psi,bb,phi,problem_type\)~relax_bottom\(init_yes,nullspace_yes,g,psi,bb,phi,problem_type,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine relax_bottom/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine relax_bottom/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~product_div_grad_relax\(g,phi,lap\)~product_div_grad_relax\(g,phi,lap,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine product_div_grad_relax/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine product_div_grad_relax/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~relaxation_div_grad\(init_yes,n_relax,g,bb,rel\)~relaxation_div_grad\(init_yes,n_relax,g,bb,rel,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine relaxation_div_grad/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine relaxation_div_grad/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~relaxation_div_grad_inv\(init_yes,n_relax,g,bb,rel\)~relaxation_div_grad_inv\(init_yes,n_relax,g,bb,rel,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine relaxation_div_grad_inv/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine relaxation_div_grad_inv/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~plain_restrict\(nullspace_yes,g,psi,bb,work,coarse,problem_type\)~plain_restrict\(nullspace_yes,g,psi,bb,work,coarse,problem_type,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine plain_restrict/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine plain_restrict/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~interpolate_mg\(g,bb,phi,work,coarse,problem_type\)~interpolate_mg\(g,bb,phi,work,coarse,problem_type,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine interpolate_mg/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine interpolate_mg/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~multigridv\(init_yes,gstart,bb,phi,problem_type\)~multigridv\(init_yes,gstart,bb,phi,problem_type,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine multigridv/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine multigridv/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~multigridf\(init_yes,gstart,bb,phi,problem_type\)~multigridf\(init_yes,gstart,bb,phi,problem_type,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine multigridf/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine multigridf/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~restrict\(add_yes,g,coarse,fine1,fine2\)~restrict\(add_yes,g,coarse,fine1,fine2,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine restrict/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine restrict/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~restrict_helmholtz\(coarse,fine1,fine2\)~restrict_helmholtz\(coarse,fine1,fine2,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine restrict_helmholtz/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine restrict_helmholtz/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~interpolate\(add_yes,g,coarse,fine,work\)~interpolate\(add_yes,g,coarse,fine,work,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine interpolate/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf
	sed -i '/end subroutine interpolate/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf
	sed -i s~interpolate_helmholtz\(coarse,fine,work\)~interpolate_helmholtz\(coarse,fine,work,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine interpolate_helmholtz/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf		
	sed -i '/end subroutine interpolate_helmholtz/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf		
	sed -i s~bicgstab2\(eps,n_it_max,init_yes,n1,n2,n3,g,ss1,ss2,ss3,nn1,nn2,nn3,bb,phi,problem_type,quiet_yes1,quiet_yes2,preconditioner\)~bicgstab2\(eps,n_it_max,init_yes,n1,n2,n3,g,ss1,ss2,ss3,nn1,nn2,nn3,bb,phi,problem_type,quiet_yes1,quiet_yes2,preconditioner,b1u,b2u,b3u,b1l,b2l,b3l,nn\)~g $(DIRSIG)/impact.pyf
	sed -i '/end subroutine bicgstab2/i \		integer,intent\(in\),optional :: b1u,b2u,b3u,b1l,b2l,b3l' $(DIRSIG)/impact.pyf		
	sed -i '/end subroutine bicgstab2/i \		integer dimension\(3,15\),intent\(in\),optional :: nn' $(DIRSIG)/impact.pyf		
#	sed -i s~read_hdf_ib\(filename,dsetname,cb\)~read_hdf_ib\(filename,dsetname,cb,m_bound\)~g $(DIRSIG)/impact.pyf
#	sed -i '/end subroutine read_hdf_ib/i \		integer,intent\(in\),optional :: m_bound' $(DIRSIG)/impact.pyf
	# Try this to solve the function pointer problem
	sed -i s~nn\(1,g\)~nn\[1,g\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(2,g\)~nn\[2,g\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(3,g\)~nn\[3,g\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(1,g+1\)~nn\[1,g+1\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(2,g+1\)~nn\[2,g+1\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(3,g+1\)~nn\[3,g+1\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(1,gstart\)~nn\[1,gstart\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(2,gstart\)~nn\[2,gstart\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(3,gstart\)~nn\[3,gstart\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(1,1\)~nn\[1,1\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(2,1\)~nn\[2,1\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(3,1\)~nn\[3,1\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(1,1+1\)~nn\[1,1+1\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(2,1+1\)~nn\[2,1+1\]~g $(DIRSIG)/impact.pyf
	sed -i s~nn\(3,1+1\)~nn\[3,1+1\]~g $(DIRSIG)/impact.pyf

ftopy: FLAG1 = $(PRE) $(LIBS) $(INCL) -I$(DST) 
ftopy: FLAG2 = $(OPT1) $(PRE) $(LIBS) $(INCL) 
ftopy: FLAG3 = $(FLAG2) -I$(DST)
ftopy: DEBUG = --noopt --noarch --verbose --debug-capi
ftopy: signature $(MOD) $(USR) 
	f2py -c $(FLAG1) $(DIRSIG)/$(NAME).pyf $(FSRC) --f90exec=$(COMP) --f90flags='$(FLAG3)' --opt='$(OPT1)' --build-dir $(DIRBLD) > f2py.log 
#	$(info $$EXCL is [${EXCL}])

f2py-clean:
	rm -f $(DIRPRE)/*.f90 $(DIRSIG)/*.pyf *.so -rf f2py/build/* 

#--- command aliases ---

ifeq ($(CUSR),FALSE)

clean: f2py-clean
clean:
	rm -f $(DST)/*.o $(DST)/*.mod $(DST)/$(EXE)

else

clean: f2py-clean
clean:
	rm -f $(DST)/usr_*.o $(DST)/usr_*.mod $(DST)/$(NAME).o $(DST)/$(EXE)

endif
